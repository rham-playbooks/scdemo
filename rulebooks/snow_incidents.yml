---
- name: Monitor incidents in ServiceNow
  hosts: all
  execution_strategy: parallel
  sources:
    - servicenow.itsm.records:
        table: incident
        interval: 10
        # Filter ONLY by assignment group; newest first to avoid the “oldest page first” trap
        sysparm_query: >
          assignment_group=91b12d5b53c72610a33138f0a0490e52^
          ORDERBYDESCsys_updated_on^ORDERBYDESCsys_id
      filters:
        - ansible.eda.json_filter:
        - ansible.eda.normalize_keys:
  rules:
    # 0) Debug helper: print the whole event for testing
    # - name: Show raw event
    #   condition: "event.environment is defined"
    #   action:
    #     debug:
    #       msg: "{{ event }}"

    # 1) Enrich incoming incidents with CMDB environment based on cmdb_ci. This is because there is no environment field in the incident table.
    - name: Enrich incident with CMDB environment - Get Environment information to act appropriately
      condition: "event.meta is defined and event.environment is not defined"
      throttle:
        once_within: 10 minutes
        group_by_attributes:
          - sys_id
      action:
        run_job_template:
          name: gather_machine_info_by_cmdb_ci
          organization: Demo3
          post_events: true
          job_args:
            extra_vars:
              cmdb_ci: "{{ event.cmdb_ci| default('') }}"

    # 2) Handle non-production incidents
    - name: Handle non-production incident
      condition: event.environment is defined and event.environment != "Production"
      action:
        run_workflow_template:
          name: non_prod_servicenow_auto_remediate_selinux_workflow
          organization: Demo3
          job_args:
            extra_vars:
              target_host: "{{ event.target_host }}"
              environment: "{{ event.environment }}"
              incident_sys_id: "{{ event.sys_id }}"
              success_update: |
                ########### EDA REMEDIATION STATUS UPDATE - SUCCESS #############
              fail_update: |
                ########### EDA REMEDIATION STATUS UPDATE - FAIL #############
              work_notes: |
                ########### EDA REMEDIATION STATUS UPDATE - Attempting remediation in {{ event.environment }} environment #############

    # 3) Handle production incidents
    - name: Handle production incident
      condition: event.environment is defined and event.environment == "Production"
      action:
        run_workflow_template:
          name: prod_raise_change
          organization: Demo3
          job_args:
            extra_vars:
              # Change Request fields
              change_short_description: "Emergency change: Enforce SELinux on {{ event.target_host | default('unknown host') }}"
              change_description: >
                Automated emergency change created by EDA.
                Incident: {{ event.incident_number | default('unknown') }}
                Host: {{ event.target_host | default('unknown host') }}
                Environment: {{ event.environment | default('unknown') }}
                Original description: {{ event.description | default('') }}

                When the change is approved, the SELinux policy will be enforced on the host uing Event Driven Ansible.
              change_impact: high
              change_urgency: high
              change_assignment_group: "Event Driven Ansible"
              implementation_job_template_name: "se_linux_remediation"
              change_justification: "SELinux policy must be enforcement in production"

              # Incident fields for the playbook's pre-change incident
              success_update: |
                ########### EDA REMEDIATION STATUS UPDATE - SUCCESS #############
              fail_update: |
                  ########### EDA REMEDIATION STATUS UPDATE - FAIL #############
              work_notes: |
                EDA REMEDIATION STATUS UPDATE - Production incident - Approval Required - Change Request Raised

              # Correlation to link incident and change
              alert_fingerprint: "{{ event.correlation_id | default('') }}"
              # Pass-through context for remediation
              target_host: "{{ event.target_host | default('') }}"
              environment: "{{ event.environment | default('') }}"
              incident_sys_id: "{{ event.sys_id | default('') }}"